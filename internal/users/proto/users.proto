syntax = "proto3";

package users;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = ".;users_pb";


service UsersService {
    rpc Create (CreateUserRequest) returns (CreateUserResponse);
    rpc Login (LoginUserRequest) returns (LoginUserResponse);
    rpc Get (GetUserRequest) returns (GetUserResponse); // one or more
    rpc Update (UpdateUserRequest) returns (UpdateUserResponse);
    rpc Delete (DeleteUserRequest) returns (DeleteUserResponse);
    // only for OrdersService interaction
    rpc AuthUser (AuthUserRequest) returns (AuthUserResponse);
    rpc GetUserOrders (GetUserOrdersRequest) returns (GetUserOrdersResponse);
    rpc CreateUserOrder (CreateUserOrderRequest) returns (google.protobuf.Empty);
    rpc DeleteUserOrder (DeleteUserOrderRequest) returns (google.protobuf.Empty);
}

message User {
    int64 id = 1;
    string username = 2;
    string address = 3;
    google.protobuf.Timestamp regdate = 4;
    repeated int64 order_ids = 5;
    // also have password and token in database
}

// Create

message CreateUserRequest {
    string username = 1;
    string password = 2;
    string address = 3;
}

message CreateUserResponse {
    User user = 1;
}

// Login

message LoginUserRequest {
    string username = 1;
    string password = 2;
}

message LoginUserResponse {
    int64 id = 1;
    string token = 2;
}

// Get

message GetUserRequest {
    string token = 1;
    repeated int64 ids = 2;
}

message GetUserResponse {
    repeated User users = 1;
}

// Update

message UpdateUserRequest {
    string token = 1;
    User user = 2;
}

message UpdateUserResponse {
    User user = 1;
}

// Delete

message DeleteUserRequest {
    string token = 1;
}

message DeleteUserResponse {
    User user = 1;
}

// Auth user

message AuthUserRequest {
    string token = 1;
}

message AuthUserResponse {
    int64 id = 1;
}

// Get list of orders of user

message GetUserOrdersRequest {
    int64 id = 1;
}

message GetUserOrdersResponse{
    repeated int64 order_ids = 2;
}

// Crete new order for user

message CreateUserOrderRequest {
    int64 id = 1;
    int64 order_id = 2;
}

// Delete an order from user

message DeleteUserOrderRequest {
    int64 id = 1;
    int64 order_id = 2;
}