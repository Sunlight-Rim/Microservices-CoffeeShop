syntax = "proto3";

package orders;

import "google/protobuf/timestamp.proto";
import "internal/orders/proto/annotations.proto";
// import "internal/orders/proto/options.annotations.proto";

option go_package = ".;orders_pb";


service OrdersService {
    rpc Create (CreateOrderRequest) returns (CreateOrderResponse) {
        option (google.api.http) = {
            post: "/order"
            body: "*"
        };
        // option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        //     parameters: {
        //         headers: {
        //             name: "Authorization";
        //             type: STRING,
        //             required: true;
        //         };
        //     };
        // };
    };
    rpc Get (GetOrderRequest) returns (GetOrderResponse) {
        option (google.api.http) = {
            get: "/order/{id}"
        };
    };
    rpc List (ListOrderRequest) returns (ListOrderResponse) {
        option (google.api.http) = {
            get: "/order"
        };
    };
    rpc Update (UpdateOrderRequest) returns (UpdateOrderResponse) {
        option (google.api.http) = {
            patch: "/order/{id}"
            body: "*"
        };
    };
    rpc Delete (DeleteOrderRequest) returns (DeleteOrderResponse) {
        option (google.api.http) = {
            delete: "/order/{id}"
        };
    };
}

message Order {
    enum Status {
        PENDING = 0;
        DELIVERED = 1;
    }
    uint32 id = 1;
    uint32 userid = 2;
    Status status = 3;
    string coffee = 4;
    string topping = 5;
    uint32 sugar = 6;
    float total = 7;
    google.protobuf.Timestamp date = 8;
}

// Create

message CreateOrderRequest {
    string coffee = 1;
    string topping = 2;
    uint32 sugar = 3;
}

message CreateOrderResponse {
    Order order = 1;
}

// Get

message GetOrderRequest {
    uint32 id = 1;
}

message GetOrderResponse {
    Order order = 1;
}

// List
// Returns only 5 orders per request
message ListOrderRequest {
    uint32 shift = 1;
}

message ListOrderResponse {
    repeated Order orders = 1;
}

// Update

message UpdateOrderRequest {
    uint32 id = 1;
    string coffee = 2;
    string topping = 3;
    uint32 sugar = 4;
}

message UpdateOrderResponse {
    Order order = 1;
}

// Delete

message DeleteOrderRequest {
    int64 id = 1;
}

message DeleteOrderResponse {
    Order order = 1;
}